# Generated by Django 4.1.8 on 2023-04-24 16:53

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
import simple_history.models


class Migration(migrations.Migration):
    dependencies = [
        ("users", "0002_user_avatar_user_birth_date_user_draft_user_gender_and_more"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="user",
            name="draft",
        ),
        migrations.RemoveField(
            model_name="user",
            name="more_data",
        ),
        migrations.RemoveField(
            model_name="user",
            name="prefs",
        ),
        migrations.AddField(
            model_name="user",
            name="address1",
            field=models.CharField(blank=True, max_length=256, null=True),
        ),
        migrations.AddField(
            model_name="user",
            name="address2",
            field=models.CharField(blank=True, max_length=256, null=True),
        ),
        migrations.AddField(
            model_name="user",
            name="city",
            field=models.CharField(blank=True, max_length=128, null=True),
        ),
        migrations.AddField(
            model_name="user",
            name="country",
            field=models.CharField(blank=True, max_length=128, null=True),
        ),
        migrations.AddField(
            model_name="user",
            name="height",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=3,
                null=True,
                validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(3)],
                verbose_name="Height (m)",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="phone",
            field=phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=50, null=True, region=None),
        ),
        migrations.AddField(
            model_name="user",
            name="phone_verified",
            field=models.BooleanField(default=None, null=True),
        ),
        migrations.AddField(
            model_name="user",
            name="social_media",
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="user",
            name="state",
            field=models.CharField(blank=True, max_length=128, null=True),
        ),
        migrations.AddField(
            model_name="user",
            name="usac_license",
            field=models.IntegerField(blank=True, null=True, unique=True),
        ),
        migrations.AddField(
            model_name="user",
            name="usac_license_verified",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="user",
            name="user_agreement_waiver_record",
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="user",
            name="weight",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=5,
                null=True,
                validators=[
                    django.core.validators.MinValueValidator(10),
                    django.core.validators.MaxValueValidator(300),
                ],
                verbose_name="Weight (kg)",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="zipcode",
            field=models.CharField(blank=True, max_length=10, null=True),
        ),
        migrations.CreateModel(
            name="HistoricalUser",
            fields=[
                ("id", models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name="ID")),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                ("last_login", models.DateTimeField(blank=True, null=True, verbose_name="last login")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                ("date_joined", models.DateTimeField(default=django.utils.timezone.now, verbose_name="date joined")),
                ("name", models.CharField(blank=True, max_length=255, verbose_name="Name of User")),
                ("email", models.EmailField(db_index=True, max_length=254, verbose_name="email address")),
                ("usac_license", models.IntegerField(blank=True, db_index=True, null=True)),
                ("usac_license_verified", models.BooleanField(default=False)),
                (
                    "gender",
                    models.CharField(
                        choices=[("m", "Male"), ("f", "Female"), ("o", "Other"), ("u", "Unknown")],
                        default="u",
                        max_length=1,
                    ),
                ),
                ("birth_date", models.DateField(blank=True, null=True)),
                ("avatar", models.TextField(blank=True, max_length=100, null=True)),
                (
                    "phone",
                    phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=50, null=True, region=None),
                ),
                ("phone_verified", models.BooleanField(default=None, null=True)),
                ("address1", models.CharField(blank=True, max_length=256, null=True)),
                ("address2", models.CharField(blank=True, max_length=256, null=True)),
                ("country", models.CharField(blank=True, max_length=128, null=True)),
                ("city", models.CharField(blank=True, max_length=128, null=True)),
                ("state", models.CharField(blank=True, max_length=128, null=True)),
                ("zipcode", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "weight",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(10),
                            django.core.validators.MaxValueValidator(300),
                        ],
                        verbose_name="Weight (kg)",
                    ),
                ),
                (
                    "height",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=3,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(3),
                        ],
                        verbose_name="Height (m)",
                    ),
                ),
                ("social_media", models.JSONField(blank=True, null=True)),
                ("opt_in_email", models.BooleanField(blank=True, default=False, null=True)),
                ("terms_of_service", models.BooleanField(blank=True, default=False, null=True)),
                ("user_agreement_waiver", models.BooleanField(blank=True, default=False, null=True)),
                ("user_agreement_waiver_record", models.JSONField(blank=True, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical user",
                "verbose_name_plural": "historical users",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
